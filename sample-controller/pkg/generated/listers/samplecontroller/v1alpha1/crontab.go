/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "k8s.io/sample-controller/pkg/apis/samplecontroller/v1alpha1"
)

// CrontabLister helps list Crontabs.
type CrontabLister interface {
	// List lists all Crontabs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Crontab, err error)
	// Crontabs returns an object that can list and get Crontabs.
	Crontabs(namespace string) CrontabNamespaceLister
	CrontabListerExpansion
}

// crontabLister implements the CrontabLister interface.
type crontabLister struct {
	indexer cache.Indexer
}

// NewCrontabLister returns a new CrontabLister.
func NewCrontabLister(indexer cache.Indexer) CrontabLister {
	return &crontabLister{indexer: indexer}
}

// List lists all Crontabs in the indexer.
func (s *crontabLister) List(selector labels.Selector) (ret []*v1alpha1.Crontab, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Crontab))
	})
	return ret, err
}

// Crontabs returns an object that can list and get Crontabs.
func (s *crontabLister) Crontabs(namespace string) CrontabNamespaceLister {
	return crontabNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CrontabNamespaceLister helps list and get Crontabs.
type CrontabNamespaceLister interface {
	// List lists all Crontabs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Crontab, err error)
	// Get retrieves the Crontab from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Crontab, error)
	CrontabNamespaceListerExpansion
}

// crontabNamespaceLister implements the CrontabNamespaceLister
// interface.
type crontabNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Crontabs in the indexer for a given namespace.
func (s crontabNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Crontab, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Crontab))
	})
	return ret, err
}

// Get retrieves the Crontab from the indexer for a given namespace and name.
func (s crontabNamespaceLister) Get(name string) (*v1alpha1.Crontab, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("crontab"), name)
	}
	return obj.(*v1alpha1.Crontab), nil
}
